From c9fc1bfb13da9e63f2e9f4ef905fed02c6b3dc69 Mon Sep 17 00:00:00 2001
From: Simone Basso <bassosimone@gmail.com>
Date: Thu, 13 Sep 2012 20:29:28 +0200
Subject: [PATCH 07/11] utils_ctl: read /api/exit nonexistent response

If we read the response, the error happens in the client that is
requesting exit, where it is discared.  On the contrary, if the
client immediately closes the connection, the error may happen on
the server (subject to a race condition) where it will be logged
in red, and may raise bug reports.

We can safely stop returing True/False, since no other piece of code
in Neubot was using it.

---
 neubot/utils_ctl.py | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/neubot/utils_ctl.py b/neubot/utils_ctl.py
index 318d7d6..17c7ba0 100644
--- a/neubot/utils_ctl.py
+++ b/neubot/utils_ctl.py
@@ -104,14 +104,17 @@ def stop(address, port, verbose=0):
         connection.set_debuglevel(verbose)
         connection.request('POST', '/api/exit')
 
-        # New /api/exit does not send any response
-        #response = connection.getresponse()
-        #response.read()
+        #
+        # New /api/exit does not send any response, therefore the piece
+        # of code below is going to fail.  Anyway, it's not a big deal
+        # because the whole function is wrapped by a blanket try..except.
+        #
+        response = connection.getresponse()
+        response.read()
 
         connection.close()
-        return True
 
     except (SystemExit, KeyboardInterrupt):
         raise
     except:
-        return False
+        pass
-- 
Simone Basso

